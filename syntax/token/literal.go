package token

var Literal = [...]string{
	// Non static or empty literals
	EOF: "<EOF>",

	Plus:             "+",
	Comma:            ",",
	Dot:              ".",
	Semicolon:        ";",
	Asterisk:         "*",
	Slash:            "/",
	Minus:            "-",
	Percent:          "%",
	Equal:            "=",
	Greater:          ">",
	Less:             "<",
	GreaterEqual:     ">=",
	LessEqual:        "<=",
	NotEqual:         "!=",
	NotEqualAlt:      "<>",
	DoubleColon:      "::",
	LeftParentheses:  "(",
	RightParentheses: ")",

	// Keywords
	Select:     "SELECT",
	Insert:     "INSERT",
	Update:     "UPDATE",
	Delete:     "DELETE",
	Create:     "CREATE",
	Truncate:   "TRUNCATE",
	Alter:      "ALTER",
	Set:        "SET",
	Default:    "DEFAULT",
	Limit:      "LIMIT",
	Null:       "NULL",
	Join:       "JOIN",
	Left:       "LEFT",
	Right:      "RIGHT",
	On:         "ON",
	Full:       "FULL",
	Outer:      "OUTER",
	Inner:      "INNER",
	Into:       "INTO",
	Values:     "VALUES",
	Is:         "IS",
	In:         "IN",
	As:         "AS",
	Union:      "UNION",
	All:        "ALL",
	With:       "WITH",
	Exists:     "EXISTS",
	Any:        "ANY",
	Case:       "CASE",
	When:       "WHEN",
	Then:       "THEN",
	End:        "END",
	Having:     "HAVING",
	Group:      "GROUP",
	By:         "BY",
	Order:      "ORDER",
	Index:      "INDEX",
	Drop:       "DROP",
	Table:      "TABLE",
	Distinct:   "DISTINCT",
	From:       "FROM",
	Where:      "WHERE",
	Like:       "LIKE",
	Between:    "BETWEEN",
	And:        "AND",
	Or:         "OR",
	Not:        "NOT",
	Asc:        "ASC",
	Primary:    "PRIMARY",
	Key:        "KEY",
	Foreign:    "FOREIGN",
	Unique:     "UNIQUE",
	Add:        "ADD",
	Constraint: "CONSTRAINT",
	Check:      "CHECK",
	Desc:       "DESC",
	Column:     "COLUMN",
	Comment:    "COMMENT",
	Trigger:    "TRIGGER",
	Cascade:    "CASCADE",
	Nothing:    "NOTHING",
	Returning:  "RETURNING",
	Nulls:      "NULLS",
	First:      "FIRST",
	Last:       "LAST",
	Conflict:   "CONFLICT",
	Do:         "DO",
	References: "REFERENCES",
	Sequence:   "SEQUENCE",
	Temporary:  "TEMPORARY",
	Temp:       "TEMP",

	LineComment:      "<LINECOM>",
	MultiLineComment: "<MULTCOM>",
	String:           "<STRING>",
	QuotedIdentifier: "<QIDENT>",
	Illegal:          "<ILLEGAL>",
	Identifier:       "<IDENT>",
	DecimalInteger:   "<DECINT>",
	DecimalFloat:     "<DECFLT>",
}
